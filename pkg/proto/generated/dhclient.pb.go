// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dhclient.proto

package godhcpd

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DHClient struct {
	Device               string   `protobuf:"bytes,1,opt,name=Device,proto3" json:"Device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHClient) Reset()         { *m = DHClient{} }
func (m *DHClient) String() string { return proto.CompactTextString(m) }
func (*DHClient) ProtoMessage()    {}
func (*DHClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_be7a0255fd2aa76a, []int{0}
}

func (m *DHClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHClient.Unmarshal(m, b)
}
func (m *DHClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHClient.Marshal(b, m, deterministic)
}
func (m *DHClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHClient.Merge(m, src)
}
func (m *DHClient) XXX_Size() int {
	return xxx_messageInfo_DHClient.Size(m)
}
func (m *DHClient) XXX_DiscardUnknown() {
	xxx_messageInfo_DHClient.DiscardUnknown(m)
}

var xxx_messageInfo_DHClient proto.InternalMessageInfo

func (m *DHClient) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

type DHClientManaged struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Device               string   `protobuf:"bytes,2,opt,name=Device,proto3" json:"Device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHClientManaged) Reset()         { *m = DHClientManaged{} }
func (m *DHClientManaged) String() string { return proto.CompactTextString(m) }
func (*DHClientManaged) ProtoMessage()    {}
func (*DHClientManaged) Descriptor() ([]byte, []int) {
	return fileDescriptor_be7a0255fd2aa76a, []int{1}
}

func (m *DHClientManaged) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHClientManaged.Unmarshal(m, b)
}
func (m *DHClientManaged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHClientManaged.Marshal(b, m, deterministic)
}
func (m *DHClientManaged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHClientManaged.Merge(m, src)
}
func (m *DHClientManaged) XXX_Size() int {
	return xxx_messageInfo_DHClientManaged.Size(m)
}
func (m *DHClientManaged) XXX_DiscardUnknown() {
	xxx_messageInfo_DHClientManaged.DiscardUnknown(m)
}

var xxx_messageInfo_DHClientManaged proto.InternalMessageInfo

func (m *DHClientManaged) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DHClientManaged) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

type DHClientManagerListArgs struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHClientManagerListArgs) Reset()         { *m = DHClientManagerListArgs{} }
func (m *DHClientManagerListArgs) String() string { return proto.CompactTextString(m) }
func (*DHClientManagerListArgs) ProtoMessage()    {}
func (*DHClientManagerListArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_be7a0255fd2aa76a, []int{2}
}

func (m *DHClientManagerListArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHClientManagerListArgs.Unmarshal(m, b)
}
func (m *DHClientManagerListArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHClientManagerListArgs.Marshal(b, m, deterministic)
}
func (m *DHClientManagerListArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHClientManagerListArgs.Merge(m, src)
}
func (m *DHClientManagerListArgs) XXX_Size() int {
	return xxx_messageInfo_DHClientManagerListArgs.Size(m)
}
func (m *DHClientManagerListArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_DHClientManagerListArgs.DiscardUnknown(m)
}

var xxx_messageInfo_DHClientManagerListArgs proto.InternalMessageInfo

type DHClientManagedId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHClientManagedId) Reset()         { *m = DHClientManagedId{} }
func (m *DHClientManagedId) String() string { return proto.CompactTextString(m) }
func (*DHClientManagedId) ProtoMessage()    {}
func (*DHClientManagedId) Descriptor() ([]byte, []int) {
	return fileDescriptor_be7a0255fd2aa76a, []int{3}
}

func (m *DHClientManagedId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHClientManagedId.Unmarshal(m, b)
}
func (m *DHClientManagedId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHClientManagedId.Marshal(b, m, deterministic)
}
func (m *DHClientManagedId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHClientManagedId.Merge(m, src)
}
func (m *DHClientManagedId) XXX_Size() int {
	return xxx_messageInfo_DHClientManagedId.Size(m)
}
func (m *DHClientManagedId) XXX_DiscardUnknown() {
	xxx_messageInfo_DHClientManagedId.DiscardUnknown(m)
}

var xxx_messageInfo_DHClientManagedId proto.InternalMessageInfo

func (m *DHClientManagedId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DHClientManagerListReply struct {
	DHClientsManaged     []*DHClientManaged `protobuf:"bytes,1,rep,name=DHClientsManaged,proto3" json:"DHClientsManaged,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DHClientManagerListReply) Reset()         { *m = DHClientManagerListReply{} }
func (m *DHClientManagerListReply) String() string { return proto.CompactTextString(m) }
func (*DHClientManagerListReply) ProtoMessage()    {}
func (*DHClientManagerListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_be7a0255fd2aa76a, []int{4}
}

func (m *DHClientManagerListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHClientManagerListReply.Unmarshal(m, b)
}
func (m *DHClientManagerListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHClientManagerListReply.Marshal(b, m, deterministic)
}
func (m *DHClientManagerListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHClientManagerListReply.Merge(m, src)
}
func (m *DHClientManagerListReply) XXX_Size() int {
	return xxx_messageInfo_DHClientManagerListReply.Size(m)
}
func (m *DHClientManagerListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DHClientManagerListReply.DiscardUnknown(m)
}

var xxx_messageInfo_DHClientManagerListReply proto.InternalMessageInfo

func (m *DHClientManagerListReply) GetDHClientsManaged() []*DHClientManaged {
	if m != nil {
		return m.DHClientsManaged
	}
	return nil
}

func init() {
	proto.RegisterType((*DHClient)(nil), "godhcpd.DHClient")
	proto.RegisterType((*DHClientManaged)(nil), "godhcpd.DHClientManaged")
	proto.RegisterType((*DHClientManagerListArgs)(nil), "godhcpd.DHClientManagerListArgs")
	proto.RegisterType((*DHClientManagedId)(nil), "godhcpd.DHClientManagedId")
	proto.RegisterType((*DHClientManagerListReply)(nil), "godhcpd.DHClientManagerListReply")
}

func init() { proto.RegisterFile("dhclient.proto", fileDescriptor_be7a0255fd2aa76a) }

var fileDescriptor_be7a0255fd2aa76a = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xc9, 0x48, 0xce,
	0xc9, 0x4c, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0xcf, 0x4f, 0xc9,
	0x48, 0x2e, 0x48, 0x51, 0x52, 0xe2, 0xe2, 0x70, 0xf1, 0x70, 0x06, 0x4b, 0x09, 0x89, 0x71, 0xb1,
	0xb9, 0xa4, 0x96, 0x65, 0x26, 0xa7, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x79, 0x4a,
	0x96, 0x5c, 0xfc, 0x30, 0x35, 0xbe, 0x89, 0x79, 0x89, 0xe9, 0xa9, 0x29, 0x42, 0x7c, 0x5c, 0x4c,
	0x9e, 0x29, 0x50, 0x65, 0x4c, 0x9e, 0x29, 0x48, 0x5a, 0x99, 0x50, 0xb4, 0x4a, 0x72, 0x89, 0xa3,
	0x6a, 0x2d, 0xf2, 0xc9, 0x2c, 0x2e, 0x71, 0x2c, 0x4a, 0x2f, 0x56, 0x52, 0xe6, 0x12, 0x44, 0x33,
	0xd5, 0x13, 0xc3, 0x5c, 0xa5, 0x04, 0x2e, 0x09, 0x2c, 0xfa, 0x83, 0x52, 0x0b, 0x72, 0x2a, 0x85,
	0x5c, 0xb8, 0x04, 0x60, 0x72, 0xc5, 0x50, 0x13, 0x24, 0x18, 0x15, 0x98, 0x35, 0xb8, 0x8d, 0x24,
	0xf4, 0xa0, 0xde, 0xd3, 0x43, 0xb3, 0x21, 0x08, 0x43, 0x87, 0xd1, 0x3c, 0x26, 0x74, 0xdf, 0x15,
	0x09, 0x59, 0x72, 0xb1, 0x39, 0x17, 0xa5, 0x26, 0x96, 0xa4, 0x0a, 0x09, 0x62, 0x98, 0x24, 0x25,
	0x85, 0xcb, 0x70, 0xcf, 0x14, 0x25, 0x06, 0x21, 0x5f, 0x2e, 0x16, 0x90, 0x0b, 0x85, 0x14, 0x70,
	0xa8, 0x82, 0xfb, 0x5f, 0x4a, 0x11, 0x9f, 0x0a, 0xb0, 0x0f, 0x95, 0x18, 0x84, 0x6c, 0xb9, 0x98,
	0xdd, 0x53, 0x4b, 0x84, 0xf0, 0xd8, 0x29, 0x85, 0xd3, 0xb3, 0x4a, 0x0c, 0x42, 0x4e, 0xa0, 0x68,
	0xc9, 0x49, 0x2d, 0x49, 0xc5, 0x6b, 0x02, 0x5e, 0x1f, 0x25, 0xb1, 0x81, 0x53, 0x8c, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x5f, 0x0a, 0x43, 0xc3, 0x43, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DHClientManagerClient is the client API for DHClientManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DHClientManagerClient interface {
	Create(ctx context.Context, in *DHClient, opts ...grpc.CallOption) (*DHClientManagedId, error)
	List(ctx context.Context, in *DHClientManagerListArgs, opts ...grpc.CallOption) (*DHClientManagerListReply, error)
	Get(ctx context.Context, in *DHClientManagedId, opts ...grpc.CallOption) (*DHClientManaged, error)
	Delete(ctx context.Context, in *DHClientManagedId, opts ...grpc.CallOption) (*DHClientManagedId, error)
}

type dHClientManagerClient struct {
	cc *grpc.ClientConn
}

func NewDHClientManagerClient(cc *grpc.ClientConn) DHClientManagerClient {
	return &dHClientManagerClient{cc}
}

func (c *dHClientManagerClient) Create(ctx context.Context, in *DHClient, opts ...grpc.CallOption) (*DHClientManagedId, error) {
	out := new(DHClientManagedId)
	err := c.cc.Invoke(ctx, "/godhcpd.DHClientManager/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dHClientManagerClient) List(ctx context.Context, in *DHClientManagerListArgs, opts ...grpc.CallOption) (*DHClientManagerListReply, error) {
	out := new(DHClientManagerListReply)
	err := c.cc.Invoke(ctx, "/godhcpd.DHClientManager/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dHClientManagerClient) Get(ctx context.Context, in *DHClientManagedId, opts ...grpc.CallOption) (*DHClientManaged, error) {
	out := new(DHClientManaged)
	err := c.cc.Invoke(ctx, "/godhcpd.DHClientManager/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dHClientManagerClient) Delete(ctx context.Context, in *DHClientManagedId, opts ...grpc.CallOption) (*DHClientManagedId, error) {
	out := new(DHClientManagedId)
	err := c.cc.Invoke(ctx, "/godhcpd.DHClientManager/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DHClientManagerServer is the server API for DHClientManager service.
type DHClientManagerServer interface {
	Create(context.Context, *DHClient) (*DHClientManagedId, error)
	List(context.Context, *DHClientManagerListArgs) (*DHClientManagerListReply, error)
	Get(context.Context, *DHClientManagedId) (*DHClientManaged, error)
	Delete(context.Context, *DHClientManagedId) (*DHClientManagedId, error)
}

// UnimplementedDHClientManagerServer can be embedded to have forward compatible implementations.
type UnimplementedDHClientManagerServer struct {
}

func (*UnimplementedDHClientManagerServer) Create(ctx context.Context, req *DHClient) (*DHClientManagedId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedDHClientManagerServer) List(ctx context.Context, req *DHClientManagerListArgs) (*DHClientManagerListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedDHClientManagerServer) Get(ctx context.Context, req *DHClientManagedId) (*DHClientManaged, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedDHClientManagerServer) Delete(ctx context.Context, req *DHClientManagedId) (*DHClientManagedId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterDHClientManagerServer(s *grpc.Server, srv DHClientManagerServer) {
	s.RegisterService(&_DHClientManager_serviceDesc, srv)
}

func _DHClientManager_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DHClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DHClientManagerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/godhcpd.DHClientManager/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DHClientManagerServer).Create(ctx, req.(*DHClient))
	}
	return interceptor(ctx, in, info, handler)
}

func _DHClientManager_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DHClientManagerListArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DHClientManagerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/godhcpd.DHClientManager/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DHClientManagerServer).List(ctx, req.(*DHClientManagerListArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _DHClientManager_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DHClientManagedId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DHClientManagerServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/godhcpd.DHClientManager/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DHClientManagerServer).Get(ctx, req.(*DHClientManagedId))
	}
	return interceptor(ctx, in, info, handler)
}

func _DHClientManager_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DHClientManagedId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DHClientManagerServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/godhcpd.DHClientManager/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DHClientManagerServer).Delete(ctx, req.(*DHClientManagedId))
	}
	return interceptor(ctx, in, info, handler)
}

var _DHClientManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "godhcpd.DHClientManager",
	HandlerType: (*DHClientManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _DHClientManager_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _DHClientManager_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _DHClientManager_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DHClientManager_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dhclient.proto",
}
