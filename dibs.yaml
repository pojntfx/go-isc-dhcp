targets:
  - name: dhcpdd-linux
    helm:
      src: charts/dhcpdd
      dist: .bin/chart
    dockerManifest: pojntfx/dhcpdd:latest
    platforms:
      - identifier: linux/amd64
        paths:
          watch: .
          include: (.*)\.go
          assetInImage: /usr/local/bin/dhcpdd
          assetOut: .bin/binaries/dhcpdd-linux-amd64
          gitRepoRoot: .
        commands:
          generateSources: go generate ./...
          build: GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/dhcpdd-linux-amd64 cmd/dhcpdd/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/dhcpdd-linux-amd64 --help
          imageTests: docker run --platform linux/amd64 -e DIBS_TARGET=linux -e TARGETPLATFORM=linux/amd64 pojntfx/dhcpdd:linux-amd64 /usr/local/bin/dhcpdd --help
          chartTests: helm install dhcpdd .bin/chart/dhcpdd-*.tgz && helm delete dhcpdd
          start: |
            if [ "$DIBS_DEBUG" = "true" ]; then
              pkill -9 dlv || true
              pkill -9 dhcpdd || true
              .bin/binaries/dhcpdd-linux-amd64 &
              dlv attach $! --headless --listen=:31441 --api-version=2 --accept-multiclient || true
            else
              .bin/binaries/dhcpdd-linux-amd64
            fi
        docker:
          build:
            file: Dockerfile.dhcpdd
            context: .
            tag: pojntfx/dhcpdd:linux-amd64
          unitTests:
            file: Dockerfile.unitTests
            context: .
            tag: pojntfx/dhcpdd-unit-tests:linux-amd64
          integrationTests:
            file: Dockerfile.integrationTests
            context: .
            tag: pojntfx/dhcpdd-integration-tests:linux-amd64
          chartTests:
            file: Dockerfile.chartTests
            context: .
            tag: pojntfx/dhcpdd-chart-tests:linux-amd64
      - identifier: linux/arm64
        paths:
          watch: .
          include: (.*)\.go
          assetInImage: /usr/local/bin/dhcpdd
          assetOut: .bin/binaries/dhcpdd-linux-arm64
          gitRepoRoot: .
        commands:
          generateSources: go generate ./...
          build: GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/dhcpdd-linux-arm64 cmd/dhcpdd/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/dhcpdd-linux-arm64 --help
          imageTests: docker run --platform linux/arm64 -e DIBS_TARGET=linux -e TARGETPLATFORM=linux/arm64 pojntfx/dhcpdd:linux-arm64 /usr/local/bin/dhcpdd --help
          chartTests: helm install dhcpdd .bin/chart/dhcpdd-*.tgz && helm delete dhcpdd
          start: |
            if [ "$DIBS_DEBUG" = "true" ]; then
              pkill -9 dlv || true
              pkill -9 dhcpdd || true
              .bin/binaries/dhcpdd-linux-arm64 &
              dlv attach $! --headless --listen=:31441 --api-version=2 --accept-multiclient || true
            else
              .bin/binaries/dhcpdd-linux-arm64
            fi
        docker:
          build:
            file: Dockerfile.dhcpdd
            context: .
            tag: pojntfx/dhcpdd:linux-arm64
          unitTests:
            file: Dockerfile.unitTests
            context: .
            tag: pojntfx/dhcpdd-unit-tests:linux-arm64
          integrationTests:
            file: Dockerfile.integrationTests
            context: .
            tag: pojntfx/dhcpdd-integration-tests:linux-arm64
          chartTests:
            file: Dockerfile.chartTests
            context: .
            tag: pojntfx/dhcpdd-chart-tests:linux-arm64
  - name: dhcpdctl-linux
    platforms:
      - identifier: linux/amd64
        paths:
          watch: .
          include: (.*)\.go
          assetInImage: /usr/local/bin/dhcpdctl
          assetOut: .bin/binaries/dhcpdctl-linux-amd64
          gitRepoRoot: .
        commands:
          generateSources: go generate ./...
          build: GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/dhcpdctl-linux-amd64 cmd/dhcpdctl/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/dhcpdctl-linux-amd64 --help
          start: .bin/binaries/dhcpdctl-linux-amd64 --help
        docker:
          build:
            file: Dockerfile.dhcpdctl
            context: .
            tag: pojntfx/dhcpdctl:linux-amd64 # Only to get the binaries from Docker
          unitTests:
            file: Dockerfile.unitTests
            context: .
            tag: pojntfx/dhcpdctl-unit-tests:linux-amd64
          integrationTests:
            file: Dockerfile.integrationTests
            context: .
            tag: pojntfx/dhcpdctl-integration-tests:linux-amd64
      - identifier: linux/arm64
        paths:
          watch: .
          include: (.*)\.go
          assetInImage: /usr/local/bin/dhcpdctl
          assetOut: .bin/binaries/dhcpdctl-linux-arm64
          gitRepoRoot: .
        commands:
          generateSources: go generate ./...
          build: GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/dhcpdctl-linux-arm64 cmd/dhcpdctl/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/dhcpdctl-linux-arm64 --help
          start: .bin/binaries/dhcpdctl-linux-arm64 --help
        docker:
          build:
            file: Dockerfile.dhcpdctl
            context: .
            tag: pojntfx/dhcpdctl:linux-arm64 # Only to get the binaries from Docker
          unitTests:
            file: Dockerfile.unitTests
            context: .
            tag: pojntfx/dhcpdctl-unit-tests:linux-arm64
          integrationTests:
            file: Dockerfile.integrationTests
            context: .
            tag: pojntfx/dhcpdctl-integration-tests:linux-arm64
  - name: dhcpdctl-darwin
    platforms:
      - identifier: darwin/amd64
        paths:
          watch: .
          include: (.*)\.go
          gitRepoRoot: .
        commands:
          generateSources: go generate ./...
          build: GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/dhcpdctl-darwin-amd64 cmd/dhcpdctl/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/dhcpdctl-darwin-amd64 --help
          start: .bin/binaries/dhcpdctl-darwin-amd64 --help
